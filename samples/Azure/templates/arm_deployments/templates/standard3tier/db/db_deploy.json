{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ddosProtectionPlanName": {
            "type": "String"
        },
        "loadBalancerDbName": {
            "type": "String"
        },
        "dbServerName": {
            "type": "String"
        },
        "privateEndpointDbName": {
            "type": "String"
        },
        "virtualMachineDbProxyName": {
            "type": "String"
        },
        "storageAccountDbMigName": {
            "type": "String"
        },
        "networkInterfaceDbProxyName": {
            "type": "String"
        },
        "publicIPAddressDbProxyName": {
            "type": "String"
        },
        "publicIPAddressDbProxyIpAddr": {
            "type": "String"
        },
        "privateIPAddressDb": {
            "type": "String"
        },
        "virtualNetworkBeNameIpCidr": {
            "type": "String"
        },
        "virtualNetworkDbNameIpCidr": {
            "type": "String"
        },
        "virtualSubNetworkDbNameIpCidr": {
            "type": "String"
        },
        "virtualNetworkBeName": {
            "type": "String"
        },
        "virtualNetworkDbName": {
            "type": "String"
        },
        "virtualMachineScaleSetsDbName": {
            "type": "String"
        },
        "autoscalesettingDbName": {
            "type": "String"
        },
        "networkInterfaceDbName": {
            "type": "String"
        },
        "administratorLogin": {
            "type": "String"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128
        },
        "location": {
            "type": "string"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "vnetSetup",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/tpayne/terraform-examples/main/samples/Azure/templates/arm_deployments/templates/standard3tier/db/vnet_deploy.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ddosProtectionPlanName": {
                        "value": "[parameters('ddosProtectionPlanName')]"
                    },
                    "dbServerName": {
                        "value": "[parameters('dbServerName')]"
                    },
                    "networkInterfaceDbProxyName": {
                        "value": "[parameters('networkInterfaceDbProxyName')]"
                    },
                    "publicIPAddressDbProxyName": {
                        "value": "[parameters('publicIPAddressDbProxyName')]"
                    },
                    "publicIPAddressDbProxyIpAddr": {
                        "value": "[parameters('publicIPAddressDbProxyIpAddr')]"
                    },
                    "privateIPAddressDb": {
                        "value": "[parameters('privateIPAddressDb')]"
                    },
                    "virtualNetworkBeNameIpCidr": {
                        "value": "[parameters('virtualNetworkBeNameIpCidr')]"
                    },
                    "virtualNetworkDbNameIpCidr": {
                        "value": "[parameters('virtualNetworkDbNameIpCidr')]"
                    },
                    "virtualSubNetworkDbNameIpCidr": {
                        "value": "[parameters('virtualSubNetworkDbNameIpCidr')]"
                    },
                    "virtualNetworkBeName": {
                        "value": "[parameters('virtualNetworkBeName')]"
                    },
                    "virtualNetworkDbName": {
                        "value": "[parameters('virtualNetworkDbName')]"
                    },
                    "networkInterfaceDbName": {
                        "value": "[parameters('networkInterfaceDbName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "dbconfig",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/tpayne/terraform-examples/main/samples/Azure/templates/arm_deployments/templates/standard3tier/db/configs.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dbServerName": {
                        "value": "[parameters('dbServerName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[parameters('dbServerName')]",
            "location": "[parameters('location')]",
            "tags": {
                "test": "test"
            },
            "sku": {
                "name": "GP_Gen5_4",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 4
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 5120,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Enabled",
                    "storageAutogrow": "Enabled"
                },
                "version": "11",
                "sslEnforcement": "Enabled",
                "minimalTlsVersion": "TLS1_2",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Disabled",
                "createMode": "Default",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountDbMigName')]",
            "location": "[parameters('location')]",
            "tags": {
                "test": "test"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "identity": {
                "type": "None"
            },
            "properties": {
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "isNfsV3Enabled": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
            "apiVersion": "2022-08-01",
            "name": "[concat(parameters('virtualMachineScaleSetsDbName'), '/MSILinuxExtension')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetsDbName'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "autoUpgradeMinorVersion": false,
                "publisher": "Microsoft.ManagedIdentity",
                "type": "ManagedIdentityExtensionForLinux",
                "typeHandlerVersion": "1.0",
                "settings": {
                    "port": 50342
                }
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2022-10-01",
            "name": "[parameters('autoscalesettingDbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetsDbName'))]"
            ],
            "tags": {
                "test": "test"
            },
            "properties": {
                "profiles": [
                    {
                        "name": "AutoScale",
                        "capacity": {
                            "minimum": "2",
                            "maximum": "10",
                            "default": "2"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "microsoft.compute/virtualmachinescalesets",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetsDbName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetsDbName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "name": "[parameters('autoscalesettingDbName')]",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetsDbName'))]",
                "notifications": [],
                "predictiveAutoscalePolicy": {
                    "scaleMode": "Disabled"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('loadBalancerDbName'), '/', parameters('loadBalancerDbName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[parameters('virtualMachineDbProxyName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vnetSetup')]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccountDbMigName'))]"
            ],
            "tags": {
                "test": "test"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[parameters('virtualMachineDbProxyName')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "writeAcceleratorEnabled": false,
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineDbProxyName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {},
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/networkInterfaces', parameters('networkInterfaceDbProxyName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccountDbMigName'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('dbServerName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccountDbMigName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountDbMigName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                "storageEndpoint": "[concat('https://', parameters('storageAccountDbMigName'), '.blob.core.windows.net/')]",
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-05-01",
            "name": "[parameters('loadBalancerDbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vnetSetup')]"
            ],
            "tags": {
                "env": "development",
                "team": "dev",
                "test": "test"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "InternalIpAddress",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/frontendIPConfigurations/InternalIpAddress')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkDbName'), 'subnet-database-001')]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('loadBalancerDbName')]",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Tcp-5432-5432",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/loadBalancingRules/Tcp-5432-5432')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/frontendIPConfigurations/InternalIpAddress')]"
                            },
                            "frontendPort": 5432,
                            "backendPort": 5432,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-5432')]"
                            }
                        }
                    },
                    {
                        "name": "Tcp-22-22",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/loadBalancingRules/Tcp-22-22')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/frontendIPConfigurations/InternalIpAddress')]"
                            },
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-22')]"
                            }
                        }
                    },
                    {
                        "name": "Tcp-80-80",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/loadBalancingRules/Tcp-80-80')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/frontendIPConfigurations/InternalIpAddress')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-80')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "probe-port-5432",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-5432')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 5432,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    },
                    {
                        "name": "probe-port-22",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-22')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    },
                    {
                        "name": "probe-port-80",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerDbName')), '/probes/probe-port-80')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[parameters('privateEndpointDbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'vnetSetup')]"
            ],
            "tags": {
                "test": "test"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "pgdbspep",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointDbName')), '/privateLinkServiceConnections/pgdbspep')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]",
                            "groupIds": [
                                "postgresqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkDbName'), 'subnet-database-001')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(parameters('dbServerName'),'.postgres.database.azure.com')]",
                        "ipAddresses": [
                            "[parameters('privateIPAddressDb')]"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2022-03-01",
            "name": "[parameters('virtualMachineScaleSetsDbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vnetSetup')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccountDbMigName'))]"
            ],
            "tags": {
                "test": "test"
            },
            "sku": {
                "name": "Standard_B1s",
                "tier": "Standard",
                "capacity": 2
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "singlePlacementGroup": true,
                "orchestrationMode": "Uniform",
                "upgradePolicy": {
                    "mode": "Automatic",
                    "automaticOSUpgradePolicy": {
                        "enableAutomaticOSUpgrade": false,
                        "useRollingUpgradePolicy": false,
                        "disableAutomaticRollback": false
                    }
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "mig",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "linuxConfiguration": {},
                        "secrets": [],
                        "allowExtensionOperations": true
                    },
                    "storageProfile": {
                        "osDisk": {
                            "osType": "Linux",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "diskSizeGB": 30
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "18.04-LTS",
                            "version": "latest"
                        },
                        "dataDisks": [
                            {
                                "lun": 0,
                                "createOption": "Empty",
                                "caching": "ReadWrite",
                                "managedDisk": {
                                    "storageAccountType": "Standard_LRS"
                                },
                                "diskSizeGB": 10
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "terraformnetworkprofile",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "disableTcpStateTracking": false,
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "IPConfiguration",
                                            "properties": {
                                                "primary": true,
                                                "subnet": {
                                                    "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkDbName'), 'subnet-database-001')]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerDbName'), parameters('loadBalancerDbName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://', parameters('storageAccountDbMigName'), '.blob.core.windows.net/')]"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "MSILinuxExtension",
                                "properties": {
                                    "autoUpgradeMinorVersion": false,
                                    "publisher": "Microsoft.ManagedIdentity",
                                    "type": "ManagedIdentityExtensionForLinux",
                                    "typeHandlerVersion": "1.0",
                                    "settings": {
                                        "port": 50342
                                    }
                                }
                            }
                        ]
                    }
                },
                "overprovision": true,
                "doNotRunExtensionsOnOverprovisionedVMs": false
            }
        }
    ],
    "outputs": {
        "dbProxyIpAddr": {
            "type": "string",
            "value": "[reference('vnetSetup').outputs.dbProxyIpAddr.value]"
        }
    }
}